{"version":3,"file":"with-rhythm.js","sources":["../src/utils/constants.ts","../src/index.ts","../src/utils/parse-font.ts"],"sourcesContent":["export const HEADERS = ['h6', 'h5', 'h4', 'h3', 'h2', 'h1']\nexport const FONT_STACK = '-apple-system, BlinkMacSystemFont, Roboto, Oxygen, Ubuntu, Cantarell, “Fira Sans”, “Droid Sans”, “Helvetica Neue”, Arial, sans-serif'\nexport const FONT_UNIT_REGEX = /px|r?em$/\n","import {HEADERS, FONT_STACK} from './utils/constants'\nimport parseFont from './utils/parse-font'\n\ninterface WithRhythmArgs {\n\tbaseFontSize?: string,\n\tbaseLineHeight?: number,\n\tbasefontWeight?: number,\n\theaderFontWeight?: number,\n\tbaseLetterSpacing?: string,\n\theadingFont?: string,\n\theaderLetterSpacing?: string\n\tbodyFont?: string,\n\tscale?: number\n}\n\ninterface WithRhythm {\n\troot: object,\n\th1?: object,\n\th2?: object,\n\th3?: object,\n\th4?: object,\n\th5?: object,\n\th6?: object\n}\n\nexport const scales = {\n\tgoldenRatio: 1.618,\n\tperfectFifth: 1.5,\n\taugmentedFourth: 1.414,\n\tperfectFourth: 1.333,\n\tminorThird: 1.2,\n\tmajorSecond: 1.125,\n}\n\nexport function toString(styleObj: object = {}): string {\n\treturn Object.keys(styleObj).reduce((acc, key) => {\n\t\tacc += `${key}: ${styleObj[key]};`\n\t\treturn acc\n\t}, '')\n}\n\nfunction withRhythm({\n\tbaseFontSize = '16px',\n\tbaseLineHeight = 1.5,\n\tbasefontWeight = 400,\n\theaderFontWeight = 600,\n\tbaseLetterSpacing = '-.005em',\n\theaderLetterSpacing = '-.025em',\n\theadingFont = FONT_STACK,\n\tbodyFont = FONT_STACK,\n\tscale = scales.perfectFourth,\n}: WithRhythmArgs = {}): WithRhythm {\n\tconst font = parseFont(baseFontSize)\n\tconst headerLineHeight = baseLineHeight * 0.8\n\n\tconst headers = HEADERS.reduce((acc, current, index) => {\n\t\tconst headerNum = index + 1\n\t\tconst currentScale = Math.pow(scale, headerNum)\n\t\tconst fontValue = (font.value * currentScale).toFixed(2)\n\n\t\tacc[current] = {\n\t\t\t'font-family': headingFont,\n\t\t\t'font-weight': headerFontWeight,\n\t\t\t'letter-spacing': headerLetterSpacing,\n\t\t\t'font-size': `${fontValue}${font.unit}`,\n\t\t\t'line-height': headerLineHeight,\n\t\t\tmargin: `0 0 ${font.value * headerNum}${font.unit} 0 `,\n\t\t}\n\n\t\treturn acc\n\t}, {})\n\n\treturn Object.assign(\n\t\t{\n\t\t\troot: {\n\t\t\t\t'font-smoothing': 'antialiased',\n\t\t\t\t'text-rendering': 'optimizeLegibility',\n\t\t\t\t'font-style': 'normal',\n\t\t\t\t'font-family': bodyFont,\n\t\t\t\t'line-height': baseLineHeight,\n\t\t\t\t'font-weight': basefontWeight,\n\t\t\t\t'letter-spacing': baseLetterSpacing,\n\t\t\t},\n\t\t},\n\t\theaders,\n\t)\n}\n\nexport default withRhythm\n","import { FONT_UNIT_REGEX } from './constants'\n\ninterface Font {\n    value: number,\n    unit: string\n}\n\nexport default function parseFont (font: string): Font {\n  return {\n    value: Number.parseFloat(font),\n    unit: FONT_UNIT_REGEX.exec(font)[0] || ''\n  }\n}\n"],"names":["const","HEADERS","FONT_STACK","FONT_UNIT_REGEX","scales","goldenRatio","perfectFifth","augmentedFourth","perfectFourth","minorThird","majorSecond","styleObj","Object","keys","reduce","acc","key","ref","font","value","Number","parseFloat","unit","exec","parseFont","baseFontSize","headerLineHeight","baseLineHeight","headers","current","index","headerNum","currentScale","Math","pow","scale","fontValue","toFixed","headingFont","headerFontWeight","headerLetterSpacing","margin","assign","root","bodyFont","basefontWeight","baseLetterSpacing"],"mappings":"AAAOA,IAAMC,EAAU,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACzCC,EAAa,uIACbC,EAAkB,WCuBlBC,EAAS,CACrBC,YAAa,MACbC,aAAc,IACdC,gBAAiB,MACjBC,cAAe,MACfC,WAAY,IACZC,YAAa,kDAGWC,yBAAmB,IACpCC,OAAOC,KAAKF,GAAUG,gBAAQC,EAAKC,UACzCD,WAAkBJ,EAASK,QAEzB,qBAGJ,SAAoBC,kBAUA,wCATJ,8CACE,2CACA,6CACE,8CACC,sDACE,8CACRf,mCACHA,gCACHE,EAAOI,mBAETU,WC7C4BA,SAC1B,CACLC,MAAOC,OAAOC,WAAWH,GACzBI,KAAMnB,EAAgBoB,KAAKL,GAAM,IAAM,ID0C7BM,CAAUC,GACjBC,EAAoC,GAAjBC,EAEnBC,EAAU3B,EAAQa,gBAAQC,EAAKc,EAASC,OACvCC,EAAYD,EAAQ,EACpBE,EAAeC,KAAKC,IAAIC,EAAOJ,GAC/BK,GAAalB,EAAKC,MAAQa,GAAcK,QAAQ,UAEtDtB,EAAIc,GAAW,eACCS,gBACAC,mBACGC,iBACFJ,EAAYlB,qBACbQ,EACfe,cAAevB,EAAKC,MAAQY,EAAYb,cAGlCH,GACL,WAEIH,OAAO8B,OACb,CACCC,KAAM,kBACa,+BACA,kCACJ,uBACCC,gBACAjB,gBACAkB,mBACGC,IAGpBlB"}